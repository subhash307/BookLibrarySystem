{"version":3,"sources":["components/Navbar.js","actions/bookAction.js","actions/types.js","components/Book/BooksList.js","components/BookLibrary.js","components/Book/AddBook.js","reducers/errorsReducer.js","reducers/bookReducer.js","reducers/index.js","store.js","components/Book/UpdateBook.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","react_default","a","createElement","className","href","type","data-toggle","data-target","addBook","book_library","history","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","wrap","_context","prev","next","axios","post","push","payload","t0","response","data","stop","this","_x","apply","arguments","getBook","book_id","_ref4","_callee4","res","_context4","get","concat","sent","_x4","BooksList","props","deleteBook","book","scope","id","bookName","description","author","numberOfBooks","Link","to","onClick","onDeleteClick","bind","Component","connect","_ref3","_callee3","_context3","window","confirm","delete","_x3","BookLibrary","deleteAllBooks","getBacklog","LibraryContent","_this","books","bookItems","length","role","library","map","Book_BooksList","key","i","Fragment","disabled","LibraryAlgorithm","state","_ref2","_callee2","_context2","_x2","_ref5","_callee5","_context5","_x5","AddBook","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","errors","onChange","assertThisInitialized","onSubmit","nextProps","setState","e","defineProperty","target","name","value","preventDefault","newBook","classnames","is-invalid","placeholder","initialState","combineReducers","undefined","action","objectSpread","filter","middleware","thunk","ReactReduxDevTools","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","UpdateBook","updatedBook","match","params","_nextProps$book","summary","App","es","BrowserRouter","components_Navbar","Route","exact","path","component","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.70e09e74.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nfunction Navbar() {\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-dark mb-4\">\r\n         <div className=\"container\">\r\n            <a className=\"navbar-brand\" href=\"/\">\r\n            Book Library System\r\n            </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#mobile-nav\">\r\n            <span className=\"navbar-toggler-icon\" />\r\n        </button>\r\n    </div>\r\n</nav>\r\n  )\r\n}\r\nexport default Navbar;","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_BOOKS, DELETE_BOOK, GET_BOOK, DELETE_ALL_BOOKS } from \"./types\";\r\n\r\nexport const addBook = (book_library, history) => async dispatch => {\r\n  try {\r\n    await axios.post(\"/api/board\", book_library);\r\n    history.push(\"/\");\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: {}\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: error.response.data\r\n    });\r\n  }\r\n};\r\n\r\nexport const getBacklog = () => async dispatch => {\r\n  const res = await axios.get(\"/api/board/all\");\r\n  dispatch({\r\n    type: GET_BOOKS,\r\n    payload: res.data\r\n  });\r\n};\r\n\r\nexport const deleteBook = book_id => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      `You are deleting book ${book_id}, this action cannot be undone`\r\n    )\r\n  ) {\r\n    await axios.delete( `/api/board/${book_id}`);\r\n    dispatch({\r\n      type: DELETE_BOOK,\r\n      payload: book_id\r\n    });\r\n\r\n  }\r\n};\r\n\r\n\r\nexport const getBook = (book_id, history) => async dispatch => {\r\n  try {\r\n    const res = await axios.get(`/api/board/${book_id}`)\r\n    dispatch({\r\n      type: GET_BOOK,\r\n      payload: res.data\r\n    })\r\n  } catch (error) {\r\n    history.push(\"/\");\r\n  }\r\n};\r\n\r\nexport const deleteAllBooks = () => async dispatch => {\r\n  if (\r\n    window.confirm(\r\n      \"You are deleting all the books, this action cannot be undone\"\r\n    )\r\n  ) {\r\n    const res = await axios.delete( \"/api/board/delete-all\");\r\n    dispatch({\r\n      type: DELETE_ALL_BOOKS,\r\n      payload: res.data\r\n    });\r\n\r\n  }\r\n};","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_BOOKS = \"GET_BOOKS\";\r\nexport const GET_BOOK = \"GET_BOOK\";\r\nexport const DELETE_BOOK = \"DELETE_BOOK\";\r\nexport const DELETE_ALL_BOOKS = \"DELETE_ALL_BOOKS\";","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { deleteBook } from \"../../actions/bookAction\";\r\n\r\nclass BooksList extends Component {\r\n\r\n  onDeleteClick(book_id) {\r\n    this.props.deleteBook(book_id);\r\n  }\r\n  render() {\r\n    const { book } = this.props;\r\n    return (\r\n      <tbody>\r\n        <tr>\r\n          <th scope=\"row\">{book.id}</th>\r\n          <td>{book.bookName}</td>\r\n          <td>{book.description}</td>\r\n          <td>{book.author}</td>\r\n          <td>{book.numberOfBooks}</td>\r\n          <td>\r\n            <Link to={`updateBook/${book.id}`} className=\"btn btn-secondary btn-sm\">\r\n              <i className=\"fa fa-edit\" /> Edit\r\n            </Link>\r\n            <a href=\"/\" className=\"btn btn-danger float-right btn-sm\"  onClick={this.onDeleteClick.bind(this, book.id)}>\r\n              <i className=\"fa fa-trash\" /> Delete Book\r\n            </a>\r\n          </td>\r\n        </tr>\r\n      </tbody>\r\n    );\r\n  }\r\n}\r\n\r\nBooksList.propTypes = {\r\n  deleteBook: PropTypes.func.isRequired\r\n};\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteBook }\r\n)(BooksList);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport BooksList from \"./Book/BooksList\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBacklog, getBook, deleteAllBooks } from \"../actions/bookAction\";\r\n\r\nclass BookLibrary extends Component {\r\n\r\n  onDeleteClick(){\r\n    this.props.deleteAllBooks();\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getBacklog();\r\n  }\r\n\r\n  // handleClick(books){\r\n\r\n\r\n  //  let searchItem = document.getElementById(\"srch\").value;\r\n  //  books.map((book) => (\r\n  //    searchItem == book.id ? this.props.getBook(searchItem, this.props.history) :\"\"\r\n  //  //console.log(book.id==searchItem)\r\n  //   // searchItem == book.id ? console.log(\"hello\") :console.log(\"hi\")\r\n  //  ))\r\n  // }\r\n  render() {\r\n    //  console.log(state.book);\r\n\r\n    const { books } = this.props.books;\r\n    let LibraryContent;\r\n    let bookItems = [];\r\n\r\n    const LibraryAlgorithm = books => {\r\n      if (books.length < 1) {\r\n        return (\r\n          <div className=\"alert alert-info text-center\" role=\"alert\">\r\n            No book available on this library.\r\n          </div>\r\n        );\r\n      } else {\r\n        const library = books.map(book => (\r\n          <BooksList key={book.id} book={book} />\r\n        ));\r\n\r\n        for (let i = 0; i < library.length; i++) {\r\n          bookItems.push(library[i]);\r\n        }\r\n        return (\r\n          <React.Fragment>\r\n          {\r\n\t\t       // \t\t<input ref=\"search\" id=\"srch\" type=\"search\" placeholder=\"Search criteria\"/>\r\n\t\t        //\t\t<button onClick={this.handleClick.bind(this, books)}>Go</button>\r\n          }\r\n          <a id=\"myDiv\" href=\"/\" disabled={true} className=\"btn btn-danger float-right mb-3\" \r\n          onClick={this.onDeleteClick.bind(this)}>\r\n              <i className=\"fa fa-trash\" /> Delete all books\r\n            </a>\r\n\r\n            <table className=\"table table-bordered table-striped\">\r\n              <thead className=\"table-secondary\">\r\n                <tr>\r\n                  <th scope=\"col\">#</th>\r\n                  <th scope=\"col\">Book Name</th>\r\n                  <th scope=\"col\" className=\"column-width\">Description</th>\r\n                  <th scope=\"col\">Author</th>\r\n                  <th scope=\"col\">Number of books</th>\r\n                  <th scope=\"col\">Action</th>\r\n                </tr>\r\n              </thead>\r\n              {bookItems}\r\n            </table>\r\n          </React.Fragment>\r\n        );\r\n      }\r\n    };\r\n    LibraryContent = LibraryAlgorithm(books);\r\n    return (\r\n      <div className=\"container\">\r\n        <Link to=\"./addBook\" className=\"btn btn-info mb-3\">\r\n          <i className=\"fas fa-plus-circle\" /> Add new book\r\n        </Link>\r\n\r\n        <hr />\r\n        {LibraryContent}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nBookLibrary.propTypes = {\r\n  getBacklog: PropTypes.func.isRequired,\r\n  getBook: PropTypes.func.isRequired,\r\n  deleteAllBooks: PropTypes.func.isRequired,\r\n  books: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  books: state.book\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBacklog, getBook, deleteAllBooks }\r\n)(BookLibrary);\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { addBook } from \"../../actions/bookAction\";\r\nimport classnames from \"classnames\";\r\n\r\nclass AddBook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      bookName: \"\",\r\n      description: \"\",\r\n      author: \"\",\r\n      numberOfBooks: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  onChange(e) {\r\n    this.setState({[e.target.name]: e.target.value });\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const newBook = {\r\n      bookName: this.state.bookName,\r\n      description: this.state.description,\r\n      author: this.state.author,\r\n      numberOfBooks: this.state.numberOfBooks\r\n    };\r\n  //  console.log(newBook);\r\n    this.props.addBook(newBook, this.props.history);\r\n\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"addBook\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <Link to=\"/\" className=\"btn btn-light\">\r\n                Back to Board\r\n              </Link>\r\n              <h4 className=\"display-6 text-center\">Add book to library </h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.bookName\r\n                    })}\r\n                    name=\"bookName\"\r\n                    value={this.state.bookName}\r\n                    placeholder=\"Enter book name\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.bookName && (\r\n                    <div className=\"invalid-feedback\">{errors.bookName}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"description\"\r\n                    value={this.state.description}\r\n                    placeholder=\"Book Description\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.author\r\n                    })}\r\n                    name=\"author\"\r\n                    value={this.state.author}\r\n                    placeholder=\"Write the book author\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {errors.author && (\r\n                    <div className=\"invalid-feedback\">{errors.author}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"numberOfBooks\"\r\n                    value={this.state.numberOfBooks}\r\n                    placeholder=\"Number of books\"\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddBook.propTypes = {\r\n  addBook: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired\r\n};\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { addBook }\r\n)(AddBook);\r\n","import {GET_ERRORS} from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\n\r\nexport default function(state=initialState, action) {\r\n    switch(action.type) {\r\n        case GET_ERRORS:\r\n            return action.payload\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { GET_BOOKS, DELETE_BOOK, GET_BOOK } from \"../actions/types\";\r\n\r\n\r\nconst initialState = {\r\n    books: [],\r\n    book: {}\r\n};\r\n\r\nexport default function(state=initialState, action) {\r\n    switch (action.type) {\r\n        case GET_BOOKS:\r\n            return {\r\n                ...state,\r\n                books: action.payload \r\n            } \r\n        case DELETE_BOOK:\r\n            return {\r\n                ...state,\r\n                books: state.books.filter(\r\n                    book => book.id !== action.payload\r\n                )\r\n            };\r\n        case GET_BOOK:\r\n        return {\r\n            ...state,\r\n            book: action.payload\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from \"redux\";\r\nimport errorsReducer from \"./errorsReducer\";\r\nimport bookReducer from \"./bookReducer\";\r\n\r\nexport default combineReducers({\r\n  //\r\n  errors: errorsReducer,\r\n  book: bookReducer\r\n});\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk]\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware), ReactReduxDevTools)\r\n    );\r\n} else {\r\n    store = createStore(\r\n        rootReducer,\r\n        initialState,\r\n        compose(applyMiddleware(...middleware))\r\n    );\r\n}\r\n\r\nexport default store;","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { getBook, addBook } from \"../../actions/bookAction\";\r\n\r\nclass UpdateBook extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      id: \"\",\r\n      bookName: \"\",\r\n      description: \"\",\r\n      author: \"\",\r\n      numberOfBooks: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n  onChange(e) {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  }\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    const updatedBook = {\r\n      id: this.state.id,\r\n      bookName: this.state.bookName,\r\n      description: this.state.description,\r\n      author: this.state.author,\r\n      numberOfBooks: this.state.numberOfBooks\r\n    };\r\n    this.props.addBook(updatedBook, this.props.history);\r\n  }\r\n  componentDidMount() {\r\n    const { book_id } = this.props.match.params;\r\n    this.props.getBook(book_id);\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    if(nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n    const { id, bookName, description, author, numberOfBooks } = nextProps.book;\r\n\r\n    this.setState({\r\n      id,\r\n      bookName,\r\n      description,\r\n      author,\r\n      numberOfBooks\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const {errors} = this.state;\r\n    return (\r\n      <div className=\"updateBook\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <a href=\"/\" className=\"btn btn-light\">\r\n                Back to Board\r\n              </a>\r\n              <h4 className=\"display-6 text-center\">Update book </h4>\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control-lg\", {\r\n                      \"is-invalid\": errors.summary\r\n                    })}\r\n                    name=\"bookName\"\r\n                    placeholder=\"Enter book name\"\r\n                    value={this.state.bookName}\r\n                    onChange={this.onChange}\r\n                  />\r\n                  {\r\n                    errors.summary && (\r\n                      <div className=\"invalid-feedback\">{errors.summary}</div>\r\n                    )\r\n                  }\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <textarea\r\n                    type=\"text-area\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"description\"\r\n                    placeholder=\"Description about book\"\r\n                    value={this.state.description}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"author\"\r\n                    placeholder=\"Enter author name\"\r\n                    value={this.state.author}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"number\"\r\n                    className=\"form-control form-control-lg\"\r\n                    name=\"numberOfBooks\"\r\n                    placeholder=\"Enter number of books\"\r\n                    value={this.state.numberOfBooks}\r\n                    onChange={this.onChange}\r\n                  />\r\n                </div>\r\n\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nUpdateBook.propTypes = {\r\n  book: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  getBook: PropTypes.func.isRequired,\r\n  addBook: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  book: state.book.book,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  { getBook, addBook }\r\n)(UpdateBook);\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\n// import \"bootstrap/dist/css/bootstrap.min.css\";\nimport Navbar from \"./components/Navbar\";\nimport BookLibrary from \"./components/BookLibrary\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport AddBook from \"./components/Book/AddBook\";\nimport store from \"./store\";\nimport UpdateBook from \"./components/Book/UpdateBook\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Navbar />\n            <Route exact path=\"/\" component={BookLibrary} />\n            <Route exact path=\"/addBook\" component={AddBook} />\n            <Route exact path=\"/updateBook/:book_id\" component={UpdateBook} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'babel-polyfill';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}